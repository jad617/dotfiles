---
# yamllint disable rule:line-length rule:truthy

name: Dynamic Vault Secrets (with |)

on:
  workflow_dispatch:
    inputs:
      vault_secret_paths:
        description: |
          One per line, e.g.:
            secret/path1/db_password
            secret/path2/api_key
        required: true
        default: |
          secret/path1/db_password
          secret/path2/api_key

jobs:
  import-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Render multiline VAULT_SECRETS env var
        shell: bash
        run: |
          set -euo pipefail

          input='${{ inputs.vault_secret_paths }}'

          # Read only non-empty, non-comment lines
          mapfile -t lines < <(printf '%s\n' "$input" | sed -e '/^\s*#/d' -e '/^\s*$/d')

          {
            # Store a multiline value in an env var using the special heredoc format
            echo "VAULT_SECRETS<<'EOF'"
            for path in "${lines[@]}"; do
              name="$(basename "$path")"
              env_name="$(printf '%s' "$name" | tr '[:lower:]' '[:upper:]')"
              # Format required by hashicorp/vault-action:
              #   <path> <field> | <ENV_VAR>
              printf '%s %s | %s\n' "$path" "$name" "$env_name"
            done
            echo "EOF"
          } >>"$GITHUB_ENV"

      - name: Import Secrets
        uses: hashicorp/vault-action@v3
        with:
          url: https://vault-enterprise.mycompany.com:8200
          method: token
          token: ${{ secrets.VAULT_TOKEN }}
          namespace: admin
          # Keep the block scalar (|) and inject the multiline env var
          secrets: |
            ${{ env.VAULT_SECRETS }}

      - name: Debug (names only)
        shell: bash
        run: |
          echo "Exported envs:"
          echo "${{ env.VAULT_SECRETS }}" | awk -F'\\| ' '{print "- " $2}'
