################################################################################
###                              General                                     ###
################################################################################
# Tmux reload
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"

# History/scroll buffer size
set-option -g history-limit 50000

# Vim autoread
set -g focus-events on

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
# set-option -sa terminal-features ',xterm-kitty:RGB'
set-option -sa terminal-features ',xterm-kitty:RGB'

# C-l to clear
#bind -n C-l send-keys -R \; clear-history

################################################################################
###                                Panes                                    ###
################################################################################
# split panes using | and -
bind h split-window -h -c '#{pane_current_path}'
bind j split-window -h -f -c '#{pane_current_path}'
bind v split-window -v -c '#{pane_current_path}'
bind b split-window -v -f -c '#{pane_current_path}'
unbind '"'
unbind %

#Swap panes
bind -n S-KP8 swap-pane -U
bind -n S-KP2 swap-pane -D
bind -n S-KP4  swap-pane -s '{left-of}'
bind -n S-KP6 swap-pane -s '{right-of}'
bind -n S-M-Up swap-pane -U
bind -n S-M-Down swap-pane -D
bind -n S-M-Left  swap-pane -s '{left-of}'
bind -n S-M-Right swap-pane -s '{right-of}'

################################################################################
###                        Vim + tmux panes/splits                           ###
################################################################################
#Remove esc delay
set -s escape-time 0

#Resize Panes
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'M-,' if-shell "$is_vim" 'send-keys M-,'  'resize-p -U 4'
bind -n 'M-.' if-shell "$is_vim" 'send-keys M-.'  'resize-p -D 4'
bind -n 'M--' if-shell "$is_vim" 'send-keys M--'  'resize-p -L 5'
bind -n 'M-=' if-shell "$is_vim" 'send-keys M-='  'resize-pane -R 4'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'S-Left'  'select-pane -L'
# bind-key -n 'S-Down'  'select-pane -D'
# bind-key -n 'S-Up'    'select-pane -U'
# bind-key -n 'S-Right' 'select-pane -R'

bind-key -n 'S-Left'  if-shell "$is_vim" 'send-keys S-Left'  'select-pane -L'
bind-key -n 'S-Right' if-shell "$is_vim" 'send-keys S-Right'  'select-pane -R'
bind-key -n 'S-Up'    if-shell "$is_vim" 'send-keys S-Up'  'select-pane -U'
bind-key -n 'S-Down'  if-shell "$is_vim" 'send-keys S-Down'  'select-pane -D'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

bind-key -T copy-mode-vi 'S-Left' select-pane -L
bind-key -T copy-mode-vi 'S-Down' select-pane -D
bind-key -T copy-mode-vi 'S-Up' select-pane -U
bind-key -T copy-mode-vi 'S-Right' select-pane -R

#Broadcast
bind a set-window-option synchronize-panes

#Fix colors for terminal and neovim
set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-256color"
set -g terminal-overrides ',xterm-256color:Tc'
set -as terminal-overrides ',xterm*:sitm=\E[3m'

################################################################################
###                                 Colors                                   ###
################################################################################
#Status bar
# set -g status-bg colour202                                  # Status bar color
## set -g status-bg green                                 # Status bar color
setw -g window-status-current-style fg=white,bg=black       # Active window color in Status bar

#Active Borders
# set -g pane-active-border-style bg=default,fg=colour202     # Color of the border between split panes
## set -g pane-active-border-style bg=default,fg=green     # Color of the border between split panes

################################################################################
###                              Mouse config                                ###
#################################################################################
# https://unix.stackexchange.com/questions/318281/how-to-copy-and-paste-with-a-mouse-with-tmux

# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

#set -g mouse on                                             # Enable mouse in Tmux

#set-option -s set-clipboard off
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection "xclip -selection clipboard -i"

## Disable anoying jump to bottom when selecting
## To copy, left click and drag to highlight text in yellow,
## once you release left click yellow text will disappear and will automatically be available in clibboard
## # Use vim keybindings in copy mode
#setw -g mode-keys vi
## Update default binding of `Enter` to also use copy-pipe
## unbind -T copy-mode-vi Enter
##bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
###bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
##bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection "pbcopy"

##
## Emulate scrolling by sending up and down keys if these commands are running in the pane
##
#tmux_commands_with_legacy_scroll="nano less more man git vim nvim"

#bind-key -T root WheelUpPane \
#	if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
#		'send -Mt=' \
#		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
#			"send -t= Up" "copy-mode -et="'

#bind-key -T root WheelDownPane \
#	if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
#		'send -Mt=' \
#		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
#			"send -t= Down" "send -Mt="'


################################################################################
###                                  TPM                                     ###
################################################################################

# set -g @plugin 'catppuccin/tmux'

# set -g @catppuccin_flavour 'mocha' # latte,frappe, macchiato or mocha
# set -g @plugin 'fabioluciano/tmux-tokyo-night'
# set -g @plugin 'o0th/tmux-nova'

# set -g @plugin 'o0th/tmux-nova'
#
# set -g @nova-nerdfonts true
# set -g @nova-nerdfonts-left 
# set -g @nova-nerdfonts-right 
#
# set -g @nova-segment-mode "#{?client_prefix,Ω,ω}"
# set -g @nova-segment-mode-colors "#50fa7b #282a36"
#
# set -g @nova-segment-whoami "#(whoami)@#h"
# set -g @nova-segment-whoami-colors "#50fa7b #282a36"
#
# set -g @nova-pane "#I#{?pane_in_mode,  #{pane_mode},}  #W"
#
# set -g @nova-rows 0
# set -g @nova-segments-0-left "mode"
# set -g @nova-segments-0-right "whoami"
#
# use a theme

# set -g @plugin '2kabhishek/tmux2k'
# set -g @tmux2k-theme 'onedark'
#
# # to show icons only
# set -g @tmux2k-icons-only false
#
# # to customize duo bg and fg
# # set -g @tmux2k-duo-fg "#1688f0" # this will get you duo blue shown above
# # set -g @tmux2k-duo-bg "#000000" # this will set the bg for duo theme
# #
# # # to set powerline symbols
# # set -g @tmux2k-right-sep  # alternate right status bar sep
# # set -g @tmux2k-win-right-sep  # alternate window right sep
# #
# # # to not show powerline
# set -g @tmux2k-show-powerline true
# #
# # # set start icon, accpets: `session`, 'window`, or any string
# # set -g @tmux2k-start-icon ""
#

set -g @plugin 'tmux-plugins/tpm'
run '~/.tmux/plugins/tpm/tpm'
